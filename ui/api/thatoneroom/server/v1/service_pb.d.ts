// @generated by protoc-gen-es v1.2.0
// @generated from file thatoneroom/server/v1/service.proto (package thatoneroom.server.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum thatoneroom.server.v1.Direction
 */
export declare enum Direction {
  /**
   * @generated from enum value: UP = 0;
   */
  UP = 0,

  /**
   * @generated from enum value: DOWN = 1;
   */
  DOWN = 1,

  /**
   * @generated from enum value: LEFT = 2;
   */
  LEFT = 2,

  /**
   * @generated from enum value: RIGHT = 3;
   */
  RIGHT = 3,

  /**
   * @generated from enum value: STOP = 4;
   */
  STOP = 4,
}

/**
 * @generated from message thatoneroom.server.v1.ConnectRequest
 */
export declare class ConnectRequest extends Message<ConnectRequest> {
  constructor(data?: PartialMessage<ConnectRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "thatoneroom.server.v1.ConnectRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectRequest;

  static equals(a: ConnectRequest | PlainMessage<ConnectRequest> | undefined, b: ConnectRequest | PlainMessage<ConnectRequest> | undefined): boolean;
}

/**
 * @generated from message thatoneroom.server.v1.ConnectResponse
 */
export declare class ConnectResponse extends Message<ConnectResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  constructor(data?: PartialMessage<ConnectResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "thatoneroom.server.v1.ConnectResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectResponse;

  static equals(a: ConnectResponse | PlainMessage<ConnectResponse> | undefined, b: ConnectResponse | PlainMessage<ConnectResponse> | undefined): boolean;
}

/**
 * @generated from message thatoneroom.server.v1.Request
 */
export declare class Request extends Message<Request> {
  /**
   * @generated from oneof thatoneroom.server.v1.Request.action
   */
  action: {
    /**
     * @generated from field: thatoneroom.server.v1.Move move = 1;
     */
    value: Move;
    case: "move";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<Request>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "thatoneroom.server.v1.Request";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Request;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Request;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Request;

  static equals(a: Request | PlainMessage<Request> | undefined, b: Request | PlainMessage<Request> | undefined): boolean;
}

/**
 * @generated from message thatoneroom.server.v1.Response
 */
export declare class Response extends Message<Response> {
  /**
   * @generated from oneof thatoneroom.server.v1.Response.action
   */
  action: {
    /**
     * @generated from field: thatoneroom.server.v1.UpdateEntity updateEntity = 2;
     */
    value: UpdateEntity;
    case: "updateEntity";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<Response>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "thatoneroom.server.v1.Response";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Response;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Response;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Response;

  static equals(a: Response | PlainMessage<Response> | undefined, b: Response | PlainMessage<Response> | undefined): boolean;
}

/**
 * @generated from message thatoneroom.server.v1.Move
 */
export declare class Move extends Message<Move> {
  /**
   * @generated from field: thatoneroom.server.v1.Direction direction = 1;
   */
  direction: Direction;

  constructor(data?: PartialMessage<Move>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "thatoneroom.server.v1.Move";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Move;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Move;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Move;

  static equals(a: Move | PlainMessage<Move> | undefined, b: Move | PlainMessage<Move> | undefined): boolean;
}

/**
 * @generated from message thatoneroom.server.v1.Entity
 */
export declare class Entity extends Message<Entity> {
  /**
   * @generated from oneof thatoneroom.server.v1.Entity.entity
   */
  entity: {
    /**
     * @generated from field: thatoneroom.server.v1.Player player = 1;
     */
    value: Player;
    case: "player";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<Entity>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "thatoneroom.server.v1.Entity";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Entity;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Entity;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Entity;

  static equals(a: Entity | PlainMessage<Entity> | undefined, b: Entity | PlainMessage<Entity> | undefined): boolean;
}

/**
 * @generated from message thatoneroom.server.v1.Player
 */
export declare class Player extends Message<Player> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: thatoneroom.server.v1.Coordinate position = 3;
   */
  position?: Coordinate;

  constructor(data?: PartialMessage<Player>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "thatoneroom.server.v1.Player";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Player;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Player;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Player;

  static equals(a: Player | PlainMessage<Player> | undefined, b: Player | PlainMessage<Player> | undefined): boolean;
}

/**
 * @generated from message thatoneroom.server.v1.Coordinate
 */
export declare class Coordinate extends Message<Coordinate> {
  /**
   * @generated from field: int32 x = 1;
   */
  x: number;

  /**
   * @generated from field: int32 y = 2;
   */
  y: number;

  constructor(data?: PartialMessage<Coordinate>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "thatoneroom.server.v1.Coordinate";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Coordinate;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Coordinate;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Coordinate;

  static equals(a: Coordinate | PlainMessage<Coordinate> | undefined, b: Coordinate | PlainMessage<Coordinate> | undefined): boolean;
}

/**
 * @generated from message thatoneroom.server.v1.UpdateEntity
 */
export declare class UpdateEntity extends Message<UpdateEntity> {
  /**
   * @generated from field: thatoneroom.server.v1.Entity entity = 1;
   */
  entity?: Entity;

  constructor(data?: PartialMessage<UpdateEntity>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "thatoneroom.server.v1.UpdateEntity";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateEntity;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateEntity;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateEntity;

  static equals(a: UpdateEntity | PlainMessage<UpdateEntity> | undefined, b: UpdateEntity | PlainMessage<UpdateEntity> | undefined): boolean;
}

